<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>generic on 我的简单博客</title><link>https://donnol.github.io/tags/generic/</link><description>Recent content in generic on 我的简单博客</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 30 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://donnol.github.io/tags/generic/index.xml" rel="self" type="application/rss+xml"/><item><title>泛型</title><link>https://donnol.github.io/posts/2022/05/generic/</link><pubDate>Mon, 30 May 2022 00:00:00 +0000</pubDate><guid>https://donnol.github.io/posts/2022/05/generic/</guid><description>Go泛型 # 试看：
// 准确的描述出了参数和返回值的类型，非常方便 func Add(x, y int) int // 但也限制了Add函数的参数类型--只能接收`int` // Add(0.1, 0.2) // can&amp;#39;t do that // 那怎么办呢？再写一个针对float64的呗 func AddFloat64(x, y float64) float64 AddFloat64(0.1, 0.2) // it&amp;#39;s ok // 如果还要支持其它类型呢？再加一个吗，每多一种类型，就多加一个。。。 func AddInt8(x, y int8) int8 func AddInt32(x, y int32) int32 func AddFloat32(x, y float32) float32 // more... // emm. // how about interface{}? func AddAny(x, y interface{}) interface{} { switch x.</description></item></channel></rss>