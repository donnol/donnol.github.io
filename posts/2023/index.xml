<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2023 on 我的简单博客</title><link>https://donnol.github.io/posts/2023/</link><description>Recent content in 2023 on 我的简单博客</description><generator>Hugo 0.125.2</generator><language>en</language><lastBuildDate>Mon, 01 Jan 0001 00:00:00 +0000</lastBuildDate><atom:link href="https://donnol.github.io/posts/2023/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://donnol.github.io/posts/2023/11/go_template_dot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://donnol.github.io/posts/2023/11/go_template_dot/</guid><description>dot: 在模板里表示为.，表示当前作用域。
{{range}}, {{if}}, {{with}}均有自己的作用域。
{{if pipeline}}和{{with pipeline}}的区别是，前者不会修改.的值，而后者会。
with # with设置.的值：
{{with pipeline}} T1 {{end}} {{with pipeline}} T1 {{else}} T0 {{end}} 当pipeline不为0值时，点.设置为pipeline运算的值，否则跳过。
例如：
{{with &amp;#34;hello&amp;#34;}} {{println .}} {{end}} 将输入hello，因为.被设置为了hello.</description></item><item><title/><link>https://donnol.github.io/posts/2023/11/lllj/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://donnol.github.io/posts/2023/11/lllj/</guid><description>亮灯明途， 亮剑征服。 丽景慰人， 君芳抚世。</description></item><item><title/><link>https://donnol.github.io/posts/2023/11/%E4%B9%B0%E8%B5%8C%E6%8A%A2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://donnol.github.io/posts/2023/11/%E4%B9%B0%E8%B5%8C%E6%8A%A2/</guid><description>分-&amp;gt;买-&amp;gt;赌-&amp;gt;抢</description></item><item><title/><link>https://donnol.github.io/posts/2023/11/%E5%90%91%E5%BE%80/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://donnol.github.io/posts/2023/11/%E5%90%91%E5%BE%80/</guid><description>向往 # 营造一个环境，演绎一段故事，打造一个向往。
来使我消费。
现实的边际效用低了，就用想象中的来补充。</description></item><item><title/><link>https://donnol.github.io/posts/2023/11/%E5%B1%95%E5%BC%80%E5%AE%8F%E4%BB%A5%E6%96%B9%E4%BE%BF%E9%98%85%E8%AF%BB/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://donnol.github.io/posts/2023/11/%E5%B1%95%E5%BC%80%E5%AE%8F%E4%BB%A5%E6%96%B9%E4%BE%BF%E9%98%85%E8%AF%BB/</guid><description> 展开宏以方便阅读 # gcc -E macro.c -o macro_expand.c.
-E Preprocess only; do not compile, assemble or link.
macro.c:
#include &amp;lt;stdio.h&amp;gt; #include &amp;lt;stdlib.h&amp;gt; #define SUM(a, b) ((a) + (b)) #define SUB(a, b) ((a) - (b)) int main() { int a = 2; int b = 1; int c = 0; c = SUM(a, b) + SUB(a, b); printf(&amp;#34;%d\n&amp;#34;, c); } 生成的macro_expand.c:
// 生成的文件里包含了非常多内容，这里就不一一展示了，有兴趣的可以自己试一下 // 其中关键的部分： # 7 &amp;#34;macro.c&amp;#34; int main() { int a = 2; int b = 1; int c = 0; c = ((a) + (b)) + ((a) - (b)); printf(&amp;#34;%d\n&amp;#34;, c); }</description></item><item><title/><link>https://donnol.github.io/posts/2023/11/%E7%90%86%E6%83%B3%E5%92%8C%E7%8E%B0%E5%AE%9E/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://donnol.github.io/posts/2023/11/%E7%90%86%E6%83%B3%E5%92%8C%E7%8E%B0%E5%AE%9E/</guid><description>做的时候从现实出发，没人手、没时间、没资源，但是必须限期做出来；&amp;ndash; 死也死出来
评的时候从理想出发，这里应该、那里必须，依然还有好多要优化。&amp;ndash; 这点东西不够看</description></item></channel></rss>