<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>wasm on 我的简单博客</title><link>https://donnol.github.io/categories/wasm/</link><description>Recent content in wasm on 我的简单博客</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 28 Jan 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://donnol.github.io/categories/wasm/index.xml" rel="self" type="application/rss+xml"/><item><title>wasm运行时wasmtime</title><link>https://donnol.github.io/posts/2022/01/wasmtime/</link><pubDate>Fri, 28 Jan 2022 00:00:00 +0000</pubDate><guid>https://donnol.github.io/posts/2022/01/wasmtime/</guid><description>源码 # # 下载 git clone git@github.com:bytecodealliance/wasmtime.git # 子模块 git submodule update --init --recursive # 安装 cargo build 如果忘了拉子模块，vscode的rust-analyzer会报错，导致智能提示等功能失效。
不过整个初始化过程还是有点长，等了好久才能正常使用。
阅读 # 从build.rs开始，首先映入眼帘的是use anyhow::Context;：
/// Provides the `context` method for `Result`. /// /// This trait is sealed and cannot be implemented for types outside of /// `anyhow`. 这是一个为其它类型（anyhow::Result）引入context方法的特征啊，多么伟大，在anyhow包外面的类型就不要想着去实现它了，你们高攀不起的。
再看anyhow::Context的定义：
// lib.rs:598 pub trait Context&amp;lt;T, E&amp;gt;: context::private::Sealed { // 继承了Sealed，那它又是怎么样的、做什么的呢？ /// Wrap the error value with additional context.</description></item></channel></rss>